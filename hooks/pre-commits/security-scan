#!/usr/bin/env python

from subprocess import Popen, PIPE
import re
import sys
import random
import string
try:
    from exceptions import UnicodeDecodeError
except:
    pass

sys.stdin = open('/dev/tty')


class bcolors:
    HEADER = '\033[95m'
    OKBLUE = '\033[94m'
    OKGREEN = '\033[92m'
    WARNING = '\033[93m'
    FAIL = '\033[91m'
    ENDC = '\033[0m'
    BOLD = '\033[1m'
    UNDERLINE = '\033[4m'


SUSPICIOUS_FILENAME_EXTENSIONS = (
    'rsa', 'dsa', '.private_key', '.psql_history', '.mysql_history',
    '.pem', '.log', '.htpasswd', '.key', 'tblk',
)

SUSPICIOUS_FILENAME_KEYWORDS = (
    'opvn', 'keychain', 'password', 'backup', 'tblk', 'credentials',
)

SUSPICIOUS_CREDENTIALS = set(
    [re.compile(regex) for regex in [
        '(?<![A-Za-z0-9/=])[A-Za-z0-9/+=]{40}(?![A-Za-z0-9/+=])',  # aws secret key
        '(?<![A-Z0-9])[A-Z0-9]{20}(?![A-Z0-9])', # aws access key
        '.*PRIVATE KEY.*',  # rsa, ssl keys
        '.*password.*',  # literal 'password'
        'phs[\d]{6}',  # phsids
    ]]
)


def run():
    check_files()


def check_code_diff(filename):
    '''
    Check possible credentials for all newly added code lines
    '''
    added_code = Popen(
        ["git", "diff", "--cached", "--", filename], stdout=PIPE)
    has_credential = False
    for code in added_code.stdout.readlines():
        try:
            code = code.decode()
        except UnicodeDecodeError:
            pass
        code = code.strip()
        if code.startswith('+'):
            if any(regex.search(code) for regex in SUSPICIOUS_CREDENTIALS):
                print(
                    'Found possible credentials on line: '
                    '{blue}{line}{end} for file {blue}{file}{end}'
                    .format(line=code, file=filename,
                            blue=bcolors.OKBLUE, end=bcolors.ENDC))
                has_credential = True
    return has_credential


def check_files():
    '''
    Check all filenames if they have suspicious format
    '''
    has_credential = False
    filenames = Popen(["git", "diff", "--cached", "--name-only"], stdout=PIPE)
    for name in filenames.stdout.readlines():
        name = name.decode()
        name = name.strip()
        if (name.endswith(SUSPICIOUS_FILENAME_EXTENSIONS)
            or any(keyword in name for keyword in
                   SUSPICIOUS_FILENAME_KEYWORDS)):
            print('filename {blue}{file}{end} has suspicious format'
                  .format(blue=bcolors.OKBLUE, end=bcolors.ENDC, file=name))
            has_credential = True
        if check_code_diff(name):
            has_credential = True
    if has_credential:
        want_string = ''.join(random.choice(string.ascii_lowercase + string.digits) for _ in range(5))
        re_edit = raw_input(
            'Type "' + want_string + '" to ignore or n to cancel the commit. [n]: ')
        if re_edit.lower() == want_string:
            exit(0)
        exit(1)


run()
